@{
    ViewBag.Title = "Chat";
}

<h2>@ViewBag.Title</h2>

<div class="row">
    <div class="col-md-6">
        <form role="form">
            <!-- Text input-->
            <div class="form-group">
                <label for="message">Message (Public)</label>
                <input id="message" name="message" required="" type="text" placeholder="[Nhập nội dung trò chuyện]" class="form-control">
            </div>

            <!-- Button -->
            <button id="sendmessage" name="sendmessage" class="btn btn-success">Send</button>
            <hr/>
        </form>

        <form role="form">
            <div class="form-group">
                <label for="message">Join to group</label>
                @Html.DropDownList("GroupId", null, new {@class = "form-control"})

            </div>
            <button id="jointogroup" name="jointogroup" class="btn btn-warning">Join</button>
            <hr/>
        </form>

        <form role="form">
            <!-- Text input-->
            <div class="form-group">
                <label for="message">Send message</label>
                <input id="messageofgroup" name="messageofgroup" required="" type="text" placeholder="[Nhập nội dung trò chuyện]" class="form-control">
                <label for="message">in my group</label>
                @Html.DropDownList("MyGroupId", null, new {@class = "form-control"})
            </div>

            <!-- Button -->
            <button id="sendmessageofgroup" name="sendmessageofgroup" class="btn btn-danger">Send</button>            
        </form>

    </div>

    <div class="col-md-6">
        <div id="discussion"></div>
    </div>
</div>

@section scripts {
    <!--Reference the SignalR library. -->
    @Scripts.Render("~/bundles/signalr")
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>

    <!--Add script to update the page and send messages.-->
    <script>
        $(function() {

            var username = "@Context.User.Identity.Name";

            // Declare a proxy to reference the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call to send messages.
            chat.client.broadcastMessage = function(text) {
                // Html encode display name and message.

                var encodedText = $('<div />').text(text).html();
                // Add the message to the page.
                // insert before tag (id = "discussion")
                $('#discussion').prepend('<div class="alert alert-info">' + encodedText + '</div>');
            };

            chat.client.joinGroup = function(text) {
                var encodedText = $('<div />').text(text).html();
                $('#discussion').prepend('<div class="alert alert-info">' + encodedText + '</div>');
            };


            chat.client.addMessageToPage = function (message) {
                // Html encode display name and message.
                var encodedName = $('<div />').text(message.UserName).html();
                var encodedMsg = $('<div />').text(message.MessageContent).html();
                
                // Add the message to the page.

                if (message.UserName === username) {
                    $('#discussion').prepend('<div class="alert alert-success"><span class="glyphicon glyphicon-user"></span>&nbsp;' + encodedName + ':&nbsp;' + encodedMsg + '</div>');
                } else {
                    $('#discussion').prepend('<div class="alert alert-warning"><span class="glyphicon glyphicon-user"></span>&nbsp;' + encodedName + ':&nbsp;' + encodedMsg + '</div>');
                }
            };

            // Start the connection.
            $.connection.hub.start().done(function() {

                console.log("Connected!");
                $('#sendmessage').click(function() {
                    // Call the Send method on the hub.
                    var name = username;
                    var message = $('#message').val();
                    chat.server.SendMessage(name, message);

                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                    return false;
                });

                $("#jointogroup").click(function() {
                    var groupname = $("#GroupId").val();
                    chat.server.JoinGroup(groupname);
                    return false;
                });


                $('#sendmessageofgroup').click(function() {
                    // Call the Send method on the hub.
                    var name = username;
                    var message = $('#messageofgroup').val();
                    var groupName = $('#MyGroupId').val();
                    chat.server.SendMessageInGroup(name, message, groupName);

                    // Clear text box and reset focus for next comment.
                    $('#messageofgroup').val('').focus();
                    return false;
                });
            });
        });
    </script>
}